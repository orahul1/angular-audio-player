{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"audioPlayer\"];\nexport let AudioPlyerOptions = /*#__PURE__*/(() => {\n  class AudioPlyerOptions {\n    constructor() {\n      this.currentAudioTime = 0;\n      this.isAudioLoaded = false;\n      this.isRepeat = false;\n      this.audioVolume = 100;\n      this.isAudioEnded = new Subject();\n      this.isMute = false;\n      this.playEvent = new EventEmitter();\n      this.pauseEvent = new EventEmitter();\n    }\n    //get audio player events\n    options() {\n      //emit event when playing audio\n      this.audioPlayer.nativeElement.addEventListener('playing', () => {});\n      //emit when intial loading of audio\n      this.audioPlayer.nativeElement.addEventListener('loadeddata', () => {\n        this.isAudioLoaded = true;\n        this.getAudioLength();\n      });\n      //emit time on playing audio\n      this.audioPlayer.nativeElement.addEventListener('timeupdate', () => {\n        //get current audio time\n        this.currentAudioTime = Math.floor(this.audioPlayer.nativeElement.currentTime);\n        //check if audio is ended for next song and pass data to component\n        if (this.audioPlayer.nativeElement.ended) {\n          this.isAudioEnded.next(true);\n        }\n      });\n      this.audioPlayer.nativeElement.addEventListener('volumechange', () => {\n        this.audioVolume = Math.floor(this.audioPlayer.nativeElement.volume * 100);\n        if (this.audioVolume == 0) {\n          this.isMute = true;\n        } else {\n          this.isMute = false;\n        }\n      });\n    }\n    play() {\n      //toggle play-pause button\n      this.isAudioPlaying = true;\n      //play when user click play button\n      setTimeout(() => {\n        this.audioPlayer.nativeElement.play();\n        this.playEvent.emit();\n      }, 0);\n    }\n    pause() {\n      //toggle play-pause button\n      this.isAudioPlaying = false;\n      //pause when user click pause button\n      setTimeout(() => {\n        this.audioPlayer.nativeElement.pause();\n        this.pauseEvent.emit();\n      }, 0);\n    }\n    getAudioLength() {\n      this.totalAudioLength = Math.floor(this.audioPlayer.nativeElement.duration);\n    }\n    static #_ = this.ɵfac = function AudioPlyerOptions_Factory(t) {\n      return new (t || AudioPlyerOptions)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AudioPlyerOptions,\n      selectors: [[\"ng-component\"]],\n      viewQuery: function AudioPlyerOptions_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.audioPlayer = _t.first);\n        }\n      },\n      outputs: {\n        playEvent: \"playEvent\",\n        pauseEvent: \"pauseEvent\"\n      },\n      decls: 0,\n      vars: 0,\n      template: function AudioPlyerOptions_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n  return AudioPlyerOptions;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}